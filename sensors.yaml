  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /home
      - type: memory_use_percent
      - type: processor_use
      - type: processor_temperature
  - platform: time_date
  - platform: template
    sensors:
      router:
        value_template: '{% if is_state("binary_sensor.router", "on") %} {{ states.binary_sensor.router.attributes.round_trip_time_avg }} {% else %}Offline{% endif %}'
        unit_of_measurement: 'ms'
      google:
        value_template: '{% if is_state("binary_sensor.google", "on") %} {{ states.binary_sensor.google.attributes.round_trip_time_avg }} {% else %}Offline{% endif %}'
        unit_of_measurement: 'ms'
      sovrum_slackt_tid:
        friendly_name: Tid sedan sovrum släcktes
        icon_template: mdi:clock-outline
        value_template: >
          {% set t1 = utcnow() %} 
          {% set t2 = states.group.bedroom_lights.last_changed %}
          {% set hours = (t1 - t2).total_seconds() / 3600 %}
          {% set minutes = (t1 - t2).total_seconds()/60 - (hours | int)*60 %}
          {% if is_state("group.bedroom_lights", "off") -%}
          {%- if hours < 10 -%}
          0{{ hours | int }}
          {%- else -%}
          {{ hours | int }}
          {%- endif %}
          {%- if minutes < 10 -%}
          :0{{ (minutes | int) }} timmar sedan
          {%- else -%}
          :{{ (minutes | int) }} timmar sedan
          {%- endif %}
          {%- else -%} {%- endif %}
      barnrum_slackt_tid:
        friendly_name: Tid sedan barnrum släcktes
        icon_template: mdi:clock-outline
        value_template: >
          {% set t1 = utcnow() %} {% set t2 = states.light.barnrum.last_changed %}
          {% set hours = (t1 - t2).total_seconds() / 3600 %}  {% set minutes = (t1 -
          t2).total_seconds() / 60 - (hours | int)*60%}  {% if
          is_state("light.barnrum", "off") -%}
          {%- if hours < 10 -%}
          0{{ hours | int }}
          {%- else -%}
          {{ hours | int }}
          {%- endif %}
          {%- if minutes < 10 -%}
          :0{{ (minutes | int) }} timmar sedan
          {%- else -%}
          :{{ (minutes | int) }} timmar sedan
          {%- endif %}
          {%- else -%} {%- endif %}
      barnrum_rorelse_tid:
        friendly_name: Tid sedan det upptäcktes rörelse i barnrum
        icon_template: mdi:run
        value_template: > 
          {% set t1 = utcnow() %} {% set t2 = states.binary_sensor.barnrum_rorelsesensor.last_changed %}
          {% set hours = (t1 - t2).total_seconds() / 3600 %}  {% set minutes = (t1 -
          t2).total_seconds() / 60 - (hours | int)*60%}  {% if
          is_state("binary_sensor.barnrum_rorelsesensor", "off") -%}
          {%- if hours < 10 -%}
          0{{ hours | int }}
          {%- else -%}
          {{ hours | int }}
          {%- endif %}
          {%- if minutes < 10 -%}
          :0{{ (minutes | int) }} timmar sedan
          {%- else -%}
          :{{ (minutes | int) }} timmar sedan
          {%- endif %}
          {%- else -%} {%- endif %}
  - platform: tellstick
    only_named:
     - id: 183
       name: Altan
     - id: 135
       name: Vind norr
     - id: 151
       name: Garage
     - id: 167
       name: Väggväxthuset
     - id: 160
       name: Framsida
     - id: 199
       name: Vind väster
  - platform: rest
    resource: http://192.168.1.96/data.json
    name: electricity_meter
    scan_interval: 10
    value_template: 'OK'
    json_attributes:
      - payload
  - platform: template
    sensors:
      power_usage:
        friendly_name: 'Power usage'
        value_template: '{{ states.sensor.electricity_meter.attributes["payload"]["0100010700FF"][0] }}'
        unit_of_measurement: 'W'
        icon_template: mdi:home-lightning-bolt
      l1_current:
        friendly_name: 'L1 Current'
        value_template: '{{ states.sensor.electricity_meter.attributes["payload"]["01001F0700FF"][0] * (10 ** states.sensor.electricity_meter.attributes["payload"]["01001F0700FF"][1][0]) }}'
        unit_of_measurement: 'A'
        icon_template: mdi:lightning-bolt
      l2_current:
        friendly_name: 'L2 Current'
        value_template: '{{ states.sensor.electricity_meter.attributes["payload"]["0100330700FF"][0] * (10 ** states.sensor.electricity_meter.attributes["payload"]["01001F0700FF"][1][0]) }}'
        unit_of_measurement: 'A'
        icon_template: mdi:lightning-bolt
      l3_current:
        friendly_name: 'L3 Current'
        value_template: '{{ states.sensor.electricity_meter.attributes["payload"]["0100470700FF"][0] * (10 ** states.sensor.electricity_meter.attributes["payload"]["01001F0700FF"][1][0]) }}'
        unit_of_measurement: 'A'
        icon_template: mdi:lightning-bolt
      l1_voltage:
        friendly_name: 'L1 Voltage'
        value_template: '{{ states.sensor.electricity_meter.attributes["payload"]["0100200700FF"][0] * (10 ** states.sensor.electricity_meter.attributes["payload"]["0100200700FF"][1][0]) }}'
        unit_of_measurement: 'V'
        icon_template: mdi:current-ac
      l2_voltage:
        friendly_name: 'L2 Voltage'
        value_template: '{{ states.sensor.electricity_meter.attributes["payload"]["0100340700FF"][0] * (10 ** states.sensor.electricity_meter.attributes["payload"]["0100340700FF"][1][0]) }}'
        unit_of_measurement: 'V'
        icon_template: mdi:current-ac
      l3_voltage:
        friendly_name: 'L3 Voltage'
        value_template: '{{ states.sensor.electricity_meter.attributes["payload"]["0100480700FF"][0] * (10 ** states.sensor.electricity_meter.attributes["payload"]["0100480700FF"][1][0]) }}'
        unit_of_measurement: 'V'
        icon_template: mdi:current-ac
  - platform: template
    sensors:
      daily_energy_rounded:
        value_template: '{{ states.sensor.daily_energy.state | round(1) }}'
        unit_of_measurement: 'kWh'
        icon_template: mdi:home-lightning-bolt
      monthly_energy_rounded:
        value_template: '{{ states.sensor.monthly_energy.state | round(1) }}'
        unit_of_measurement: 'kWh'
        icon_template: mdi:home-lightning-bolt
      electricty_price_rounded:
        value_template: "{{ states('sensor.electricity_price_solskiftegatan_38') | multiply(100) | round(0) }}"
        unit_of_measurement: 'öre'
        icon_template: mdi:currency-usd
  - platform: integration
    source: sensor.power_usage
    name: Energy usage
    unit_prefix: k
    unit_time : h
    round: 2
  - platform: nordpool
    region: "SE3"
  - platform: template
    sensors:
      cheap_night_hour:
        friendly_name: "Billig nattimma"
        value_template: >-
          {%- set ns = namespace(hour_price=[], cheapest_hour=False) %}

          {%- set cheap_hours = namespace(number=3) %}

          {% if state_attr("sensor.nordpool_kwh_se3_sek_3_10_025", "tomorrow_valid")==true %}

          {% for i in range(22, 24) %}

              {% set ns.hour_price = ns.hour_price + [(i, states.sensor.nordpool_kwh_se3_sek_3_10_025.attributes.raw_today[i].value)] %}

          {%- endfor -%}

          {% for i in range(0, 7) %}

              {% set ns.hour_price = ns.hour_price + [(i, states.sensor.nordpool_kwh_se3_sek_3_10_025.attributes.raw_tomorrow[i].value)] %}

          {%- endfor -%}

          {% else %}

          {% for i in range(0, 7) %}

              {% set ns.hour_price = ns.hour_price + [(i, states.sensor.nordpool_kwh_se3_sek_3_10_025.attributes.raw_today[i].value)] %}

          {%- endfor -%}

          {% endif %}

          {% set hour_price_dict = dict.from_keys(ns.hour_price) %}

          {% set sorted_hour_price_dict = hour_price_dict.items()|sort(attribute='1') %}

          {% for i in range(0, cheap_hours.number) %}
            {% if sorted_hour_price_dict[i].0 == now().hour %}
            {% set ns.cheapest_hour = true %}
            {% endif %}
          {%- endfor -%}

          {{ ns.cheapest_hour }}
