  - platform: systemmonitor
    resources:
      - type: disk_use_percent
        arg: /home
      - type: memory_use_percent
      - type: processor_use
      - type: processor_temperature
  - platform: time_date
  - platform: mqtt
    name: "RaspberryPi Borg Backup"
    state_topic: "home-assistant/rpiborgbackup/status"
  - platform: template
    sensors:
      router:
        value_template: '{% if is_state("binary_sensor.router", "on") %} {{ states.binary_sensor.router.attributes.round_trip_time_avg }} {% else %}Offline{% endif %}'
        unit_of_measurement: 'ms'
      google:
        value_template: '{% if is_state("binary_sensor.google", "on") %} {{ states.binary_sensor.google.attributes.round_trip_time_avg }} {% else %}Offline{% endif %}'
        unit_of_measurement: 'ms'
      sovrum_slackt_tid:
        friendly_name: Tid sedan sovrum släcktes
        icon_template: mdi:clock-outline
        value_template: >
          {% set t1 = utcnow() %} 
          {% set t2 = states.group.bedroom_lights.last_changed %}
          {% set hours = (t1 - t2).total_seconds() / 3600 %}
          {% set minutes = (t1 - t2).total_seconds()/60 - (hours | int)*60 %}
          {% if is_state("group.bedroom_lights", "off") -%}
          {%- if hours < 10 -%}
          0{{ hours | int }}
          {%- else -%}
          {{ hours | int }}
          {%- endif %}
          {%- if minutes < 10 -%}
          :0{{ (minutes | int) }} timmar sedan
          {%- else -%}
          :{{ (minutes | int) }} timmar sedan
          {%- endif %}
          {%- else -%} {%- endif %}
      barnrum_slackt_tid:
        friendly_name: Tid sedan barnrum släcktes
        icon_template: mdi:clock-outline
        value_template: >
          {% set t1 = utcnow() %} {% set t2 = states.light.barnrum.last_changed %}
          {% set hours = (t1 - t2).total_seconds() / 3600 %}  {% set minutes = (t1 -
          t2).total_seconds() / 60 - (hours | int)*60%}  {% if
          is_state("light.barnrum", "off") -%}
          {%- if hours < 10 -%}
          0{{ hours | int }}
          {%- else -%}
          {{ hours | int }}
          {%- endif %}
          {%- if minutes < 10 -%}
          :0{{ (minutes | int) }} timmar sedan
          {%- else -%}
          :{{ (minutes | int) }} timmar sedan
          {%- endif %}
          {%- else -%} {%- endif %}
      barnrum_rorelse_tid:
        friendly_name: Tid sedan det upptäcktes rörelse i barnrum
        icon_template: mdi:run
        value_template: > 
          {% set t1 = utcnow() %} {% set t2 = states.binary_sensor.barnrum_rorelsesensor.last_changed %}
          {% set hours = (t1 - t2).total_seconds() / 3600 %}  {% set minutes = (t1 -
          t2).total_seconds() / 60 - (hours | int)*60%}  {% if
          is_state("binary_sensor.barnrum_rorelsesensor", "off") -%}
          {%- if hours < 10 -%}
          0{{ hours | int }}
          {%- else -%}
          {{ hours | int }}
          {%- endif %}
          {%- if minutes < 10 -%}
          :0{{ (minutes | int) }} timmar sedan
          {%- else -%}
          :{{ (minutes | int) }} timmar sedan
          {%- endif %}
          {%- else -%} {%- endif %}
  - platform: tellstick
    only_named:
     - id: 183
       name: Altan
     - id: 135
       name: Vind norr
     - id: 151
       name: Garage
     - id: 167
       name: Växthus
     - id: 156
       name: Framsida
     - id: 199
       name: Vind väster
  - platform: mqtt
    name: P1 Consumption Low Tariff
    unit_of_measurement: 'kWh'
    state_topic: "sensors/power/p1meter/consumption_low_tarif"
    value_template: "{{ value|float / 1000 }}"
  - platform: mqtt
    name: P1 Consumption High Tariff
    unit_of_measurement: 'kWh'
    state_topic: "sensors/power/p1meter/consumption_high_tarif"
    value_template: "{{ value|float / 1000 }}"
  - platform: mqtt
    name: P1 Return Delivery High Tariff
    unit_of_measurement: 'kWh'
    state_topic: "sensors/power/p1meter/returndelivery_high_tarif"
    value_template: "{{ value|float / 1000 }}"
  - platform: mqtt
    name: P1 Return Delivery Low Tariff
    unit_of_measurement: 'kWh'
    state_topic: "sensors/power/p1meter/returndelivery_low_tarif"
    value_template: "{{ value|float / 1000 }}"
  - platform: mqtt
    name: P1 Actual Power Consumption
    unit_of_measurement: 'kW'
    state_topic: "sensors/power/p1meter/actual_consumption"
    value_template: "{{ value|float / 1000 }}"
  - platform: mqtt
    name: P1 Actual Return Delivery
    unit_of_measurement: 'kW'
    state_topic: "sensors/power/p1meter/actual_returndelivery"
    value_template: "{{ value|float / 1000 }}"
  - platform: mqtt
    name: P1 L1 Instant Power Usage
    unit_of_measurement: 'kW'
    state_topic: "sensors/power/p1meter/l1_instant_power_usage"
    value_template: "{{ value|float / 1000 }}"
  - platform: mqtt
    name: P1 L2 Instant Power Usage
    unit_of_measurement: 'kW'
    state_topic: "sensors/power/p1meter/l2_instant_power_usage"
    value_template: "{{ value|float / 1000 }}"
  - platform: mqtt
    name: P1 L3 Instant Power Usage
    unit_of_measurement: 'kW'
    state_topic: "sensors/power/p1meter/l3_instant_power_usage"
    value_template: "{{ value|float / 1000 }}"
  - platform: mqtt
    name: P1 L1 Instant Power Current
    unit_of_measurement: 'A'
    state_topic: "sensors/power/p1meter/l1_instant_power_current"
    value_template: "{{ value|float / 1000 }}"
  - platform: mqtt
    name: P1 L2 Instant Power Current
    unit_of_measurement: 'A'
    state_topic: "sensors/power/p1meter/l2_instant_power_current"
    value_template: "{{ value|float / 1000 }}"
  - platform: mqtt
    name: P1 L3 Instant Power Current
    unit_of_measurement: 'A'
    state_topic: "sensors/power/p1meter/l3_instant_power_current"
    value_template: "{{ value|float / 1000 }}"
  - platform: mqtt
    name: P1 L1 Voltage
    unit_of_measurement: 'V'   
    state_topic: "sensors/power/p1meter/l1_voltage"
    value_template: "{{ value|float / 1000 }}"
  - platform: mqtt
    name: P1 L2 Voltage
    unit_of_measurement: 'V'   
    state_topic: "sensors/power/p1meter/l2_voltage"
    value_template: "{{ value|float / 1000 }}"
  - platform: mqtt
    name: P1 L3 Voltage
    unit_of_measurement: 'V'   
    state_topic: "sensors/power/p1meter/l3_voltage"
    value_template: "{{ value|float / 1000 }}"
  - platform: mqtt
    name: P1 Gas Usage
    unit_of_measurement: 'm3'
    state_topic: "sensors/power/p1meter/gas_meter_m3"
    value_template: "{{ value|float / 1000 }}"
  - platform: mqtt
    name: P1 Actual Tariff Group
    state_topic: "sensors/power/p1meter/actual_tarif_group"
  - platform: mqtt
    name: P1 Short Power Outages
    state_topic: "sensors/power/p1meter/short_power_outages"
  - platform: mqtt
    name: P1 Long Power Outages
    state_topic: "sensors/power/p1meter/long_power_outages"
  - platform: mqtt
    name: P1 Short Power Drops
    state_topic: "sensors/power/p1meter/short_power_drops"
  - platform: mqtt
    name: P1 Short Power Peaks
    state_topic: "sensors/power/p1meter/short_power_peaks"  
#  - platform: vasttrafik
#    key: !secret vasttrafik_key
#    secret: !secret vasttrafik_secret
#    departures:
#      - name: Mot Ytterby station
#        from: Dannemarksgatan
#        heading: Ytterby station
#  - platform: trafikverket_train
#    api_key: dde3385f0aca489e9e2a6bdd1a64c883
#    trains:
#    - name: "Nästa tåg mot GBG C"
#      from: "Ytterby"
#      to: "Göteborg C"
# Sensors for esp8266_p1meter to be used in Home Assistant
